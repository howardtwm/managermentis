class TodoItem:
    def __init__(self, title):
        self.title = title
        self.completed = False

class TodoList:
    def __init__(self):
        self.items = []

    def add_item(self, title):
        item = TodoItem(title)
        self.items.append(item)
        print("待办事项已添加。")

    def view_items(self):
        if not self.items:
            print("没有待办事项。")
        else:
            print("待办事项列表：")
            for index, item in enumerate(self.items, start=1):
                status = "[完成]" if item.completed else "[未完成]"
                print(f"{index}. {status} {item.title}")

    def complete_item(self, index):
        if index < 1 or index > len(self.items):
            print("无效的待办事项索引。")
        else:
            item = self.items[index - 1]
            item.completed = True
            print("待办事项已完成。")

    def delete_item(self, index):
        if index < 1 or index > len(self.items):
            print("无效的待办事项索引。")
        else:
            item = self.items.pop(index - 1)
            print("待办事项已删除。")

print("待办事项管理器命令行工具")

todo_list = TodoList()

while True:
    print("\n请选择操作：")
    print("1. 添加待办事项")
    print("2. 查看待办事项")
    print("3. 完成待办事项")
    print("4. 删除待办事项")
    print("5. 退出程序")

    choice = input("请选择操作（输入数字）：")

    if choice == '5':
        print("谢谢使用，再见！")
        break

    if choice == '1':
        title = input("请输入待办事项标题：")
        todo_list.add_item(title)
    elif choice == '2':
        todo_list.view_items()
    elif choice == '3':
        index = int(input("请输入待办事项索引："))
        todo_list.complete_item(index)
    elif choice == '4':
        index = int(input("请输入待办事项索引："))
        todo_list.delete_item(index)
    else:
        print("无效的选择，请重新输入。")
